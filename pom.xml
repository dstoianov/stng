<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.seniorqa</groupId>
    <artifactId>stng</artifactId>
    <version>1.0</version>
    <name>STNG</name>
    <description>A project that runs tests in parallel using Selenium Grid and TestNG</description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <org.seleniumhq.selenium.selenium-java.version>2.40.0</org.seleniumhq.selenium.selenium-java.version>
        <org.testng.testng.version>6.8.7</org.testng.testng.version>
        <org.apache.maven.plugins.surefire-testng.version>2.16</org.apache.maven.plugins.surefire-testng.version>
        <com.lazerycode.selenium.version>1.0.0</com.lazerycode.selenium.version>
        <googlchromedriverbinary.version>2.9</googlchromedriverbinary.version>
        <org.jbehave.core.version>3.9.1</org.jbehave.core.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-java</artifactId>
            <version>${org.seleniumhq.selenium.selenium-java.version}</version>
        </dependency>
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>${org.testng.testng.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jbehave</groupId>
            <artifactId>jbehave-core</artifactId>
            <version>${org.jbehave.core.version}</version>
        </dependency>
        <dependency>
            <!--
            A handy plugin that allows you to download driver binaries automatically
            To download desired driver binaries, call the plugin like that:
            mvn clean com.lazerycode.selenium:driver-binary-downloader-maven-plugin:selenium
            to
            src: http://ardesco.lazerycode.com/index.php/2012/08/introducing-the-driver-binary-downloader-maven-plugin-for-selenium/
            -->
            <groupId>com.lazerycode.selenium</groupId>
            <artifactId>driver-binary-downloader-maven-plugin</artifactId>
            <version>${com.lazerycode.selenium.version}</version>
        </dependency><!--
        <dependency>
            <groupId>net.sourceforge.htmlunit</groupId>
            <artifactId>htmlunit</artifactId>
            <version>2.13</version>
        </dependency>-->
        <dependency>
            <!--Solves the issue with FF not starting
                more info: https://code.google.com/p/selenium/issues/detail?id=5245#c6
            -->
            <groupId>xml-apis</groupId>
            <artifactId>xml-apis</artifactId>
            <version>2.0.2</version>
        </dependency>
    </dependencies>

<!--    <build>
        <sourceDirectory>src/main/java</sourceDirectory>
        <testSourceDirectory>src/test/java</testSourceDirectory>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
            </testResource>
        </testResources>
    </build>-->

    <profiles>
        <!--
        to run test using custom profile simply add -P name_of_the_profile to mvn command
        ie.:
            mvn clean install -P localRunner
        -->
        <profile>
            <id>localRunner</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <testNG.test.suite.XML.file>src/test/resources/LocalTestfactoryParallelDemo.xml</testNG.test.suite.XML.file>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>2.16</version>
                        <configuration>
                            <suiteXmlFiles>
                                <suiteXmlFile>${testNG.test.suite.XML.file}</suiteXmlFile>
                            </suiteXmlFiles>
                            <!--<reportsDirectory>${project.basedir}/reports</reportsDirectory>-->
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>remoteRunner</id>
            <properties>
                <testNG.test.suite.XML.file>src/test/resources/RemoteParallelDemo.xml</testNG.test.suite.XML.file>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>2.16</version>
                        <configuration>
                            <suiteXmlFiles>
                                <suiteXmlFile>${testNG.test.suite.XML.file}</suiteXmlFile>
                            </suiteXmlFiles>
                            <!--<reportsDirectory>${project.basedir}/reports</reportsDirectory>-->
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>localJBehaveRunner</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <testNG.test.suite.XML.file>src/test/resources/LocalJBehaveRunnerParallelDemo.xml</testNG.test.suite.XML.file>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>2.16</version>
                        <configuration>
                            <suiteXmlFiles>
                                <suiteXmlFile>${testNG.test.suite.XML.file}</suiteXmlFile>
                            </suiteXmlFiles>
                            <!--<reportsDirectory>${project.basedir}/reports</reportsDirectory>-->
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>localTestFactoryRunner</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <testNG.test.suite.XML.file>src/test/resources/LocalTestfactoryParallelDemo.xml</testNG.test.suite.XML.file>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>2.16</version>
                        <configuration>
                            <suiteXmlFiles>
                                <suiteXmlFile>${testNG.test.suite.XML.file}</suiteXmlFile>
                            </suiteXmlFiles>
                            <!--<reportsDirectory>${project.basedir}/reports</reportsDirectory>-->
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <!-- use this profile to download driver binaries before running your tests locally -->
            <id>downloadDriverBinaries</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.lazerycode.selenium</groupId>
                        <artifactId>driver-binary-downloader-maven-plugin</artifactId>
                        <version>${com.lazerycode.selenium.version}</version>
                        <configuration>
                            <!-- root directory that downloaded driver binaries will be stored in -->
                            <rootStandaloneServerDirectory>binaries</rootStandaloneServerDirectory>
                            <!-- Where you want to store downloaded zip files -->
                            <downloadedZipFileDirectory>binaries/zips</downloadedZipFileDirectory>
                            <customRepositoryMap>src/main/resources/WebDriverBinariesRepositoryMap.xml</customRepositoryMap>
                            <operatingSystems>
                                <windows>false</windows>
                                <linux>true</linux>
                                <osx>false</osx>
                            </operatingSystems>
                            <!-- Download 32bit binaries -->
                            <thirtyTwoBitBinaries>false</thirtyTwoBitBinaries>
                            <!-- Download 64bit binaries -->
                            <sixtyFourBitBinaries>true</sixtyFourBitBinaries>
                            <!-- If set to false will download every version available (Other filters will be taken into account -->
                            <onlyGetLatestVersions>true</onlyGetLatestVersions>
                            <throwExceptionIfSpecifiedVersionIsNotFound>true</throwExceptionIfSpecifiedVersionIsNotFound>
                            <!-- Provide a list of drivers and binary versions to download (this is a map so only one version can be specified per driver) -->
                            <getSpecificExecutableVersions>
                                <googlechrome>${googlchromedriverbinary.version}</googlechrome>
                                <!--<internetexplorer>2.40.0</internetexplorer>-->
                            </getSpecificExecutableVersions>
                            <!-- Number of times to attempt to download each file -->
                            <fileDownloadRetryAttempts>2</fileDownloadRetryAttempts>
                            <!-- Number of ms to wait before timing out when trying to connect to remote server to download file -->
                            <fileDownloadConnectTimeout>20000</fileDownloadConnectTimeout>
                            <!-- Number of ms to wait before timing out when trying to read file from remote server -->
                            <fileDownloadReadTimeout>10000</fileDownloadReadTimeout>
                            <!-- Overwrite any existing binaries that have been downloaded and extracted -->
                            <overwriteFilesThatExist>false</overwriteFilesThatExist>
                            <!-- Download drivers specific to the current HOST OS -->
                            <!--<onlyGetDriversForHostOperatingSystem>false</onlyGetDriversForHostOperatingSystem>-->
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>selenium</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
